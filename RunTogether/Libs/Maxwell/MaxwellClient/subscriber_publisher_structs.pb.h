// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subscriber_publisher_structs.proto

#ifndef PROTOBUF_subscriber_5fpublisher_5fstructs_2eproto__INCLUDED
#define PROTOBUF_subscriber_5fpublisher_5fstructs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common_structs.pb.h"
// @@protoc_insertion_point(includes)

namespace maxwell {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_subscriber_5fpublisher_5fstructs_2eproto();
void protobuf_AssignDesc_subscriber_5fpublisher_5fstructs_2eproto();
void protobuf_ShutdownFile_subscriber_5fpublisher_5fstructs_2eproto();

class subscribe_t;
class unsubscribe_t;
class client_heartbeat_t;
class ack_t;
class server_heartbeat_t;
class msg_t;
class msgs_t;

// ===================================================================

class subscribe_t : public ::google::protobuf::Message {
 public:
  subscribe_t();
  virtual ~subscribe_t();

  subscribe_t(const subscribe_t& from);

  inline subscribe_t& operator=(const subscribe_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const subscribe_t& default_instance();

  void Swap(subscribe_t* other);

  // implements Message ----------------------------------------------

  subscribe_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const subscribe_t& from);
  void MergeFrom(const subscribe_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .maxwell.protocol.session_id_t session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline const ::maxwell::protocol::session_id_t& session_id() const;
  inline ::maxwell::protocol::session_id_t* mutable_session_id();
  inline ::maxwell::protocol::session_id_t* release_session_id();
  inline void set_allocated_session_id(::maxwell::protocol::session_id_t* session_id);

  // @@protoc_insertion_point(class_scope:maxwell.protocol.subscribe_t)
 private:
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::maxwell::protocol::session_id_t* session_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_AssignDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_ShutdownFile_subscriber_5fpublisher_5fstructs_2eproto();

  void InitAsDefaultInstance();
  static subscribe_t* default_instance_;
};
// -------------------------------------------------------------------

class unsubscribe_t : public ::google::protobuf::Message {
 public:
  unsubscribe_t();
  virtual ~unsubscribe_t();

  unsubscribe_t(const unsubscribe_t& from);

  inline unsubscribe_t& operator=(const unsubscribe_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const unsubscribe_t& default_instance();

  void Swap(unsubscribe_t* other);

  // implements Message ----------------------------------------------

  unsubscribe_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const unsubscribe_t& from);
  void MergeFrom(const unsubscribe_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .maxwell.protocol.session_id_t session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline const ::maxwell::protocol::session_id_t& session_id() const;
  inline ::maxwell::protocol::session_id_t* mutable_session_id();
  inline ::maxwell::protocol::session_id_t* release_session_id();
  inline void set_allocated_session_id(::maxwell::protocol::session_id_t* session_id);

  // @@protoc_insertion_point(class_scope:maxwell.protocol.unsubscribe_t)
 private:
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::maxwell::protocol::session_id_t* session_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_AssignDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_ShutdownFile_subscriber_5fpublisher_5fstructs_2eproto();

  void InitAsDefaultInstance();
  static unsubscribe_t* default_instance_;
};
// -------------------------------------------------------------------

class client_heartbeat_t : public ::google::protobuf::Message {
 public:
  client_heartbeat_t();
  virtual ~client_heartbeat_t();

  client_heartbeat_t(const client_heartbeat_t& from);

  inline client_heartbeat_t& operator=(const client_heartbeat_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const client_heartbeat_t& default_instance();

  void Swap(client_heartbeat_t* other);

  // implements Message ----------------------------------------------

  client_heartbeat_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const client_heartbeat_t& from);
  void MergeFrom(const client_heartbeat_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:maxwell.protocol.client_heartbeat_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_AssignDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_ShutdownFile_subscriber_5fpublisher_5fstructs_2eproto();

  void InitAsDefaultInstance();
  static client_heartbeat_t* default_instance_;
};
// -------------------------------------------------------------------

class ack_t : public ::google::protobuf::Message {
 public:
  ack_t();
  virtual ~ack_t();

  ack_t(const ack_t& from);

  inline ack_t& operator=(const ack_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ack_t& default_instance();

  void Swap(ack_t* other);

  // implements Message ----------------------------------------------

  ack_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ack_t& from);
  void MergeFrom(const ack_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 msg_ids = 1 [packed = true];
  inline int msg_ids_size() const;
  inline void clear_msg_ids();
  static const int kMsgIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 msg_ids(int index) const;
  inline void set_msg_ids(int index, ::google::protobuf::uint64 value);
  inline void add_msg_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      msg_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_msg_ids();

  // @@protoc_insertion_point(class_scope:maxwell.protocol.ack_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > msg_ids_;
  mutable int _msg_ids_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_AssignDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_ShutdownFile_subscriber_5fpublisher_5fstructs_2eproto();

  void InitAsDefaultInstance();
  static ack_t* default_instance_;
};
// -------------------------------------------------------------------

class server_heartbeat_t : public ::google::protobuf::Message {
 public:
  server_heartbeat_t();
  virtual ~server_heartbeat_t();

  server_heartbeat_t(const server_heartbeat_t& from);

  inline server_heartbeat_t& operator=(const server_heartbeat_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const server_heartbeat_t& default_instance();

  void Swap(server_heartbeat_t* other);

  // implements Message ----------------------------------------------

  server_heartbeat_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const server_heartbeat_t& from);
  void MergeFrom(const server_heartbeat_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:maxwell.protocol.server_heartbeat_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_AssignDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_ShutdownFile_subscriber_5fpublisher_5fstructs_2eproto();

  void InitAsDefaultInstance();
  static server_heartbeat_t* default_instance_;
};
// -------------------------------------------------------------------

class msg_t : public ::google::protobuf::Message {
 public:
  msg_t();
  virtual ~msg_t();

  msg_t(const msg_t& from);

  inline msg_t& operator=(const msg_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_t& default_instance();

  void Swap(msg_t* other);

  // implements Message ----------------------------------------------

  msg_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_t& from);
  void MergeFrom(const msg_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // required bytes payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  inline void set_allocated_payload(::std::string* payload);

  // required uint32 date_added = 3;
  inline bool has_date_added() const;
  inline void clear_date_added();
  static const int kDateAddedFieldNumber = 3;
  inline ::google::protobuf::uint32 date_added() const;
  inline void set_date_added(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:maxwell.protocol.msg_t)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_payload();
  inline void clear_has_payload();
  inline void set_has_date_added();
  inline void clear_has_date_added();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* payload_;
  ::google::protobuf::uint32 date_added_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_AssignDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_ShutdownFile_subscriber_5fpublisher_5fstructs_2eproto();

  void InitAsDefaultInstance();
  static msg_t* default_instance_;
};
// -------------------------------------------------------------------

class msgs_t : public ::google::protobuf::Message {
 public:
  msgs_t();
  virtual ~msgs_t();

  msgs_t(const msgs_t& from);

  inline msgs_t& operator=(const msgs_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgs_t& default_instance();

  void Swap(msgs_t* other);

  // implements Message ----------------------------------------------

  msgs_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msgs_t& from);
  void MergeFrom(const msgs_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .maxwell.protocol.msg_t msgs = 1;
  inline int msgs_size() const;
  inline void clear_msgs();
  static const int kMsgsFieldNumber = 1;
  inline const ::maxwell::protocol::msg_t& msgs(int index) const;
  inline ::maxwell::protocol::msg_t* mutable_msgs(int index);
  inline ::maxwell::protocol::msg_t* add_msgs();
  inline const ::google::protobuf::RepeatedPtrField< ::maxwell::protocol::msg_t >&
      msgs() const;
  inline ::google::protobuf::RepeatedPtrField< ::maxwell::protocol::msg_t >*
      mutable_msgs();

  // @@protoc_insertion_point(class_scope:maxwell.protocol.msgs_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::maxwell::protocol::msg_t > msgs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_AssignDesc_subscriber_5fpublisher_5fstructs_2eproto();
  friend void protobuf_ShutdownFile_subscriber_5fpublisher_5fstructs_2eproto();

  void InitAsDefaultInstance();
  static msgs_t* default_instance_;
};
// ===================================================================


// ===================================================================

// subscribe_t

// required .maxwell.protocol.session_id_t session_id = 1;
inline bool subscribe_t::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void subscribe_t::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void subscribe_t::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void subscribe_t::clear_session_id() {
  if (session_id_ != NULL) session_id_->::maxwell::protocol::session_id_t::Clear();
  clear_has_session_id();
}
inline const ::maxwell::protocol::session_id_t& subscribe_t::session_id() const {
  return session_id_ != NULL ? *session_id_ : *default_instance_->session_id_;
}
inline ::maxwell::protocol::session_id_t* subscribe_t::mutable_session_id() {
  set_has_session_id();
  if (session_id_ == NULL) session_id_ = new ::maxwell::protocol::session_id_t;
  return session_id_;
}
inline ::maxwell::protocol::session_id_t* subscribe_t::release_session_id() {
  clear_has_session_id();
  ::maxwell::protocol::session_id_t* temp = session_id_;
  session_id_ = NULL;
  return temp;
}
inline void subscribe_t::set_allocated_session_id(::maxwell::protocol::session_id_t* session_id) {
  delete session_id_;
  session_id_ = session_id;
  if (session_id) {
    set_has_session_id();
  } else {
    clear_has_session_id();
  }
}

// -------------------------------------------------------------------

// unsubscribe_t

// required .maxwell.protocol.session_id_t session_id = 1;
inline bool unsubscribe_t::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void unsubscribe_t::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void unsubscribe_t::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void unsubscribe_t::clear_session_id() {
  if (session_id_ != NULL) session_id_->::maxwell::protocol::session_id_t::Clear();
  clear_has_session_id();
}
inline const ::maxwell::protocol::session_id_t& unsubscribe_t::session_id() const {
  return session_id_ != NULL ? *session_id_ : *default_instance_->session_id_;
}
inline ::maxwell::protocol::session_id_t* unsubscribe_t::mutable_session_id() {
  set_has_session_id();
  if (session_id_ == NULL) session_id_ = new ::maxwell::protocol::session_id_t;
  return session_id_;
}
inline ::maxwell::protocol::session_id_t* unsubscribe_t::release_session_id() {
  clear_has_session_id();
  ::maxwell::protocol::session_id_t* temp = session_id_;
  session_id_ = NULL;
  return temp;
}
inline void unsubscribe_t::set_allocated_session_id(::maxwell::protocol::session_id_t* session_id) {
  delete session_id_;
  session_id_ = session_id;
  if (session_id) {
    set_has_session_id();
  } else {
    clear_has_session_id();
  }
}

// -------------------------------------------------------------------

// client_heartbeat_t

// -------------------------------------------------------------------

// ack_t

// repeated uint64 msg_ids = 1 [packed = true];
inline int ack_t::msg_ids_size() const {
  return msg_ids_.size();
}
inline void ack_t::clear_msg_ids() {
  msg_ids_.Clear();
}
inline ::google::protobuf::uint64 ack_t::msg_ids(int index) const {
  return msg_ids_.Get(index);
}
inline void ack_t::set_msg_ids(int index, ::google::protobuf::uint64 value) {
  msg_ids_.Set(index, value);
}
inline void ack_t::add_msg_ids(::google::protobuf::uint64 value) {
  msg_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ack_t::msg_ids() const {
  return msg_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ack_t::mutable_msg_ids() {
  return &msg_ids_;
}

// -------------------------------------------------------------------

// server_heartbeat_t

// -------------------------------------------------------------------

// msg_t

// required uint64 id = 1;
inline bool msg_t::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_t::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_t::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_t::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 msg_t::id() const {
  return id_;
}
inline void msg_t::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// required bytes payload = 2;
inline bool msg_t::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_t::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_t::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_t::clear_payload() {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& msg_t::payload() const {
  return *payload_;
}
inline void msg_t::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void msg_t::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void msg_t::set_payload(const void* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* msg_t::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  return payload_;
}
inline ::std::string* msg_t::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void msg_t::set_allocated_payload(::std::string* payload) {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    delete payload_;
  }
  if (payload) {
    set_has_payload();
    payload_ = payload;
  } else {
    clear_has_payload();
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 date_added = 3;
inline bool msg_t::has_date_added() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void msg_t::set_has_date_added() {
  _has_bits_[0] |= 0x00000004u;
}
inline void msg_t::clear_has_date_added() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void msg_t::clear_date_added() {
  date_added_ = 0u;
  clear_has_date_added();
}
inline ::google::protobuf::uint32 msg_t::date_added() const {
  return date_added_;
}
inline void msg_t::set_date_added(::google::protobuf::uint32 value) {
  set_has_date_added();
  date_added_ = value;
}

// -------------------------------------------------------------------

// msgs_t

// repeated .maxwell.protocol.msg_t msgs = 1;
inline int msgs_t::msgs_size() const {
  return msgs_.size();
}
inline void msgs_t::clear_msgs() {
  msgs_.Clear();
}
inline const ::maxwell::protocol::msg_t& msgs_t::msgs(int index) const {
  return msgs_.Get(index);
}
inline ::maxwell::protocol::msg_t* msgs_t::mutable_msgs(int index) {
  return msgs_.Mutable(index);
}
inline ::maxwell::protocol::msg_t* msgs_t::add_msgs() {
  return msgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::maxwell::protocol::msg_t >&
msgs_t::msgs() const {
  return msgs_;
}
inline ::google::protobuf::RepeatedPtrField< ::maxwell::protocol::msg_t >*
msgs_t::mutable_msgs() {
  return &msgs_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace maxwell

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_subscriber_5fpublisher_5fstructs_2eproto__INCLUDED
